// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

generator nestgraphql {
  provider = "prisma-nestjs-graphql"
  output   = "../src/@generated"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Collection {
  id           Int      @id @default(autoincrement())
  name         String
  description  String
  token        String   @unique
  bannerImage  String
  profileImage String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model UniqueItem {
  id Int @id @default(autoincrement())

  token      String
  identifier String
  listing    Listing? @relation(fields: [listingId], references: [id])
  listingId  Int?

  @@unique([token, identifier])
}

model Listing {
  id                              Int                 @id @default(autoincrement())
  offerer                         String
  zone                            String
  offer                           Item[]
  consideration                   ConsiderationItem[]
  orderType                       Int
  startTime                       String
  endTime                         String
  zoneHash                        String
  salt                            String
  conduitKey                      String
  counter                         Int
  signature                       String
  totalOriginalConsiderationItems Int
  UniqueItem                      UniqueItem[]
}

model ConsiderationItem {
  id Int @id @default(autoincrement())

  item      Item     @relation(fields: [itemId], references: [id])
  recipient String
  Listing   Listing? @relation(fields: [listingId], references: [id])
  listingId Int?
  itemId    Int
}

model Item {
  id Int @id @default(autoincrement())

  itemType             Int
  token                String
  identifierOrCriteria String
  startAmount          String
  endAmount            String
  Listing              Listing?            @relation(fields: [listingId], references: [id])
  listingId            Int?
  ConsiderationItem    ConsiderationItem[]
}
